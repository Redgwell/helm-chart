---
apiVersion: "extensions/v1beta1"
kind: "Job"
metadata:
  labels:
    app: {{ template "__CHART__.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "__CHART__.fullname" . }}
spec:
  template:
    metadata:
      annotations:
        ## Oftentimes, applicatins need to be restarted once once thier configuration has been updated. However,
        ## Kubernetes makes the assumption that watching the file for configuration change is the applications
        ## responsibiliy, and doesn't restart when files change. So, the lines below modify a propery that does trigger
        ## a rotation of the applications so they are restarted when their dependencies change.
        ##
        ## See https://github.com/kubernetes/helm/blob/master/docs/charts_tips_and_tricks.md
        ##   #automatically-roll-deployments-when-configmaps-or-secrets-change
        ##
        # checksum/config: {{ include (print $.Chart.Name "/templates/secret.yaml") . | sha256sum }}
        # checksum/config: {{ include (print $.Chart.Name "/templates/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "__CHART__.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:
      # volumes:
      # - name: "secret-management-etc-conf-d"
      # configMap:
      #   name: "secret-management-etc-conf-d"
      # - name: "secret-management-data"
      #   hostPath:
      #     path: /data/secret-management/
      containers:
        - name: {{ template "__CHART__.name" }}
          # env:
          # - name: "FOO"
          #   value: "BAR"
          image: {{ .Values.image | quote }}
          # args:
          #   - "command"
          #   - "line"
          #   - "arguments"
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
          securityContext:
            privileged: {{ default "false" .Values.securityContext.privileged }}
            # capabilities:
              # add:
                # - SETPCAP
                # - SYS_MODULE
                # - SYS_RAWIO
                # - SYS_PACCT
                # - SYS_ADMIN
                # - SYS_NICE
                # - SYS_RESOURCE
                # - SYS_TIME
                # - SYS_TTY_CONFIG
                # - MKNOD
                # - AUDIT_WRITE
                # - AUDIT_CONTROL
                # - MAC_OVERRIDE
                # - MAC_ADMIN
                # - NET_ADMIN
                # - SYSLOG
                # - CHOWN
                # - NET_RAW
                # - DAC_OVERRIDE
                # - FOWNER
                # - DAC_READ_SEARCH
                # - FSETID
                # - KILL
                # - SETGID
                # - SETUID
                # - LINUX_IMMUTABLE
                # - NET_BIND_SERVICE
                # - NET_BROADCAST
                # - IPC_LOCK
                # - IPC_OWNER
                # - SYS_CHROOT
                # - SYS_PTRACE
                # - SYS_BOOT
                # - LEASE
                # - SETFCAP
                # - WAKE_ALARM
                # - BLOCK_SUSPEND
          ports:
            - containerPort: __CONTAINER_PORT__
              protocol: "__CONTAINER_PORT_PROTOCOL__"
              name: "__CONTAINER_PORT_NAME__"
          # volumeMounts:
          # - name: "secret-management-etc-conf-d"
          #   readOnly: true
          #   mountPath: "/etc/secret-management/conf.d"
          # - name: "secret-management-data
          #   readOnly: false
          #   mountPath: "/data"
          livenessProbe:
            tcpSocket:
              port: "__CONTAINER_PORT_NAME__"
            ## Number of seconds after the container has started before liveness probes are initiated.
            ## See http://kubernetes.io/docs/user-guide/pod-states#container-probes
            initialDelaySeconds: 5
            ## Number of seconds after which the probe times out. Minimum value is 1
            timeoutSeconds: 1
            ## Minimum consecutive failures for the probe to be considered failed after having succeeded.
            ## Minimum value is 1.
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: "__CONTAINER_PORT_NAME__"
            ## Number of seconds after the container has started before liveness probes are initiated.
            ## See http://kubernetes.io/docs/user-guide/pod-states#container-probes
            initialDelaySeconds: 5
            ## Number of seconds after which the probe times out. Minimum value is 1
            timeoutSeconds: 1
            ## Minimum consecutive failures for the probe to be considered failed after having succeeded.
            ## Minimum value is 1.
            failureThreshold: 3
      restartPolicy: __RESTART_POLICY__
      securityContext: {}
